version: 2.0

common: &common
  working_directory: ~/repo
  steps:
    - checkout
    - run:
        name: checkout merge commit for PRs
        command: |
          set -x
          PR_NUMBER=${CI_PULL_REQUEST//*pull\//}
          if [ -n "$PR_NUMBER" ]; then
            if ! git pull --ff-only origin "refs/pull/$PR_NUMBER/merge"; then
                echo
                echo -e "\033[0;31mERROR: Failed to merge your branch with the latest master."
                echo -e "Please manually merge master into your branch, and push the changes to GitHub.\033[0m"
                exit 1
            fi
          fi
    - restore_cache:
        keys:
          - v2-deps-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}
          - v2-deps-
    - run:
        name: install dependencies
        command: pip install --user tox
    - run:
        name: run tox
        command: ~/.local/bin/tox
    - run:
        name: upload coverage report
        command: |
          if [[ "$TOXENV" != checkqa ]]; then
              PATH=$HOME/.local/bin:$PATH
              pip install --user codecov
              ~/.local/bin/codecov --required --flags $CIRCLE_JOB

              pip install --user codacy-coverage
              python-codacy-coverage -r coverage.xml
          fi
    - save_cache:
        paths:
          - .tox
          - ~/.cache/pip
          - ~/.local
          - ./eggs
        key: v2-deps-{{ .Environment.CIRCLE_JOB }}-{{ checksum "setup.py" }}-{{ checksum "tox.ini" }}

jobs:
  lint:
    <<: *common
    docker:
      - image: circleci/python:3.6.1
        environment:
          TOXENV=checkqa
  py27dj18:
    <<: *common
    docker:
      - image: circleci/python:2.7
        environment:
          TOXENV=py27-dj18
  py27dj110:
    <<: *common
    docker:
      - image: circleci/python:2.7
        environment:
          TOXENV=py27-dj110
  py27dj111:
    <<: *common
    docker:
      - image: circleci/python:2.7
        environment:
          TOXENV=py27-dj111
  py34dj18:
    <<: *common
    docker:
      - image: circleci/python:3.4
        environment:
          TOXENV=py34-dj18
  py34dj110:
    <<: *common
    docker:
      - image: circleci/python:3.4
        environment:
          TOXENV=py34-dj110
  py34dj111:
    <<: *common
    docker:
      - image: circleci/python:3.4
        environment:
          TOXENV=py34-dj111
  py34dj20:
    <<: *common
    docker:
      - image: circleci/python:3.4
        environment:
          TOXENV=py34-dj20
  py35dj18:
    <<: *common
    docker:
      - image: circleci/python:3.5
        environment:
          TOXENV=py35-dj18
  py35dj110:
    <<: *common
    docker:
      - image: circleci/python:3.5
        environment:
          TOXENV=py35-dj110
  py35dj111:
    <<: *common
    docker:
      - image: circleci/python:3.5
        environment:
          TOXENV=py35-dj111
  py35dj20:
    <<: *common
    docker:
      - image: circleci/python:3.5
        environment:
          TOXENV=py35-dj20
  py36dj111:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV=py36-dj111
  py36dj20:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          TOXENV=py36-dj20
  py36dj20psql:
    <<: *common
    docker:
      - image: circleci/python:3.6
        environment:
          - TOXENV=py36-dj20-postgres
          - PINAX_STRIPE_DATABASE_HOST=127.0.0.1
          - PINAX_STRIPE_DATABASE_USER=root
          - PINAX_STRIPE_DATABASE_NAME=circle_test
      - image: circleci/postgres:9.6-alpine

workflows:
  version: 2
  test:
    jobs:
      - lint
      - py36dj111
      - py36dj20
      - py36dj20psql
